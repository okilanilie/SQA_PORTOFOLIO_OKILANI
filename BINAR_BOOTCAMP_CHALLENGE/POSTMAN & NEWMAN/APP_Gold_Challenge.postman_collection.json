{
	"info": {
		"_postman_id": "16773363-9f11-43fd-9e92-3f33a6787c2c",
		"name": "APP_Gold Challenge",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "24085828",
		"_collection_link": "https://www.postman.com/grey-meteor-460041/workspace/qae15-gold-challenge-okilani/collection/24085828-16773363-9f11-43fd-9e92-3f33a6787c2c?action=share&source=collection_link&creator=24085828"
	},
	"item": [
		{
			"name": "auth",
			"item": [
				{
					"name": "Register Account",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"});\r",
									"pm.test(\"Response time is less than 500ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(500);\r",
									"});\r",
									"\r",
									"var jsonData = pm.response.json() ;\r",
									"pm.environment.set (\"email\", jsonData.email);\r",
									"\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"warning": "This is a duplicate header and will be overridden by the Content-Type header generated by Postman.",
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "full_name",
									"value": "{{$randomFullName}}",
									"type": "text"
								},
								{
									"key": "email",
									"value": "{{$randomEmail}}",
									"type": "text"
								},
								{
									"key": "password",
									"value": "asdfghjkl",
									"type": "text"
								},
								{
									"key": "phone_number",
									"value": "12345678",
									"type": "text"
								},
								{
									"key": "address",
									"value": "jalan ini itu",
									"type": "text"
								},
								{
									"key": "image",
									"type": "file",
									"src": []
								},
								{
									"key": "city",
									"value": "Jakarta",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{base.url}}/auth/register",
							"host": [
								"{{base.url}}"
							],
							"path": [
								"auth",
								"register"
							]
						}
					},
					"response": []
				},
				{
					"name": "Login Account",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 500ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(500);\r",
									"});\r",
									"\r",
									"var jsonData = pm.response.json() ;\r",
									"pm.environment.set (\"access_token\", jsonData.access_token);\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"email\": \"{{email}}\",\r\n  \"password\": \"asdfghjkl\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base.url}}/auth/login",
							"host": [
								"{{base.url}}"
							],
							"path": [
								"auth",
								"login"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "seller-product",
			"item": [
				{
					"name": "Fetch Products",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 500ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(500);\r",
									"});\r",
									"\r",
									"var jsonData = pm.response.json() ;\r",
									"pm.environment.set (\"product id\", jsonData.id);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"warning": "This is a duplicate header and will be overridden by the Content-Type header generated by Postman.",
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "access_token",
								"value": "{{access_token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "name",
									"value": "{{$randomProductName}}",
									"type": "text"
								},
								{
									"key": "description",
									"value": "ini bagus banget loh",
									"type": "text"
								},
								{
									"key": "base_price",
									"value": "10000",
									"type": "text"
								},
								{
									"key": "category_ids",
									"value": "1",
									"type": "text"
								},
								{
									"key": "location",
									"value": "Jakarta",
									"type": "text"
								},
								{
									"key": "image",
									"type": "file",
									"src": "710f4b0d6971497243139d0885ff8369.jpg"
								}
							]
						},
						"url": {
							"raw": "{{base.url}}/seller/product",
							"host": [
								"{{base.url}}"
							],
							"path": [
								"seller",
								"product"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Product List",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 500ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(500);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "access_token",
								"value": "{{access_token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"url": {
							"raw": "{{base.url}}/seller/product",
							"host": [
								"{{base.url}}"
							],
							"path": [
								"seller",
								"product"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Product",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 500ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(500);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "access_token",
								"value": "{{access_token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"url": {
							"raw": "{{base.url}}/seller/product/:id",
							"host": [
								"{{base.url}}"
							],
							"path": [
								"seller",
								"product",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{product id}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Product",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 500ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(500);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "access_token",
								"value": "{{access_token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"url": {
							"raw": "{{base.url}}/seller/product/:id",
							"host": [
								"{{base.url}}"
							],
							"path": [
								"seller",
								"product",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{product id}}"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "buyer-product",
			"item": [
				{
					"name": "Fetch Product",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 500ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(500);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"url": {
							"raw": "{{base.url}}/buyer/product?status=published&category_id=2&search=&page=1&per_page=10",
							"host": [
								"{{base.url}}"
							],
							"path": [
								"buyer",
								"product"
							],
							"query": [
								{
									"key": "status",
									"value": "published"
								},
								{
									"key": "category_id",
									"value": "2"
								},
								{
									"key": "search",
									"value": ""
								},
								{
									"key": "page",
									"value": "1"
								},
								{
									"key": "per_page",
									"value": "10"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Fetch Product by ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 500ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(500);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{base.url}}/buyer/product/:id",
							"host": [
								"{{base.url}}"
							],
							"path": [
								"buyer",
								"product",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "2"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "buyer-order",
			"item": [
				{
					"name": "Create Order",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 500ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(500);\r",
									"});\r",
									"\r",
									"var jsonData = pm.response.json() ;\r",
									"pm.environment.set (\"order id\", jsonData.id);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "access_token",
								"value": "{{access_token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"product_id\": 5512,\r\n  \"bid_price\": 1000000\r\n}"
						},
						"url": {
							"raw": "{{base.url}}/buyer/order",
							"host": [
								"{{base.url}}"
							],
							"path": [
								"buyer",
								"order"
							]
						}
					},
					"response": []
				},
				{
					"name": "Fetch Orders",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 500ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(500);\r",
									"});\r",
									"\r",
									"var jsonData = pm.response.json() ;\r",
									"pm.environment.set (\"order id\", jsonData.id);"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "access_token",
								"value": "{{access_token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{base.url}}/buyer/order",
							"host": [
								"{{base.url}}"
							],
							"path": [
								"buyer",
								"order"
							]
						}
					},
					"response": []
				},
				{
					"name": "Fetch Orders by ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 500ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(500);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "access_token",
								"value": "{{access_token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{base.url}}/buyer/order/:id",
							"host": [
								"{{base.url}}"
							],
							"path": [
								"buyer",
								"order",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{order id}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Edit Order by iD",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 500ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(500);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "access_token",
								"value": "{{access_token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"bid_price\": 1000000\r\n}"
						},
						"url": {
							"raw": "{{base.url}}/buyer/order/:id",
							"host": [
								"{{base.url}}"
							],
							"path": [
								"buyer",
								"order",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{order id}}"
								}
							]
						}
					},
					"response": []
				}
			]
		}
	]
}